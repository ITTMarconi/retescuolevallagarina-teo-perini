---
import { SERVER_ADDRESS, SERVER_PORT } from "../../../../Data/constants.ts";
import type { Institute, OpenDays, Sede } from "../../../../Data/types";
import OpenDaysList from "../../components/OpenDaysList.astro";

import Layout from "../../layouts/Layout.astro";
import Navbar from "../../components/Navbar.astro";
import Icon from "../../components/Icon.astro";
import { PUBLIC_API_URL } from "astro:env/client";
import { readItem } from "@directus/sdk";
import directus from "../../lib/directus";

const { id } = Astro.params;

//const INSTITUTE_RAW = await fetch(`http://${SERVER_ADDRESS}:${SERVER_PORT}/istituto/${id}`);

//const OPENDAYS_RAW = await fetch(`http://${SERVER_ADDRESS}:${SERVER_PORT}/opendays/${id}`);
// const OPENDAYS: OpenDays = await OPENDAYS_RAW.json();

const INSTITUTE = await directus.request(
    readItem("schools", id as string, {
        // @ts-expect-error: "*.*" is a valid Directus field selector
        fields: ["*", "*.*", "edu_links.educational_path.name"],
    }),
);

let VIDEO = null;
if (
    Array.isArray(INSTITUTE.videos) &&
    INSTITUTE.videos[0] &&
    typeof INSTITUTE.videos[0] !== "string"
) {
    VIDEO = `${PUBLIC_API_URL}/assets/${INSTITUTE.videos[0]?.video_file}`;
}

console.log(INSTITUTE);
---

<Layout>
    <Navbar />

    <main>
        <header>
            <h2 class="font-regular">{INSTITUTE.name}</h2>
            <hr />

            <section>
                <img
                    src={// @ts-expect-error: id valid property
                    `${PUBLIC_API_URL}/assets/${INSTITUTE.logo?.id}`}
                    alt={// @ts-expect-error: title valid property
                    `${INSTITUTE.logo?.title}`}
                />

                <nav>
                    <a href={INSTITUTE.website_url} target="_blank">
                        <Icon code="f728" color="var(--foreground-secondary)" />
                        <span>{INSTITUTE.website_url}</span>
                    </a>

                    <a
                        href={`https://www.google.com/maps/search/?api=1&query=${INSTITUTE.address}`}
                        target="_blank"
                    >
                        <Icon code="e0c8" color="var(--foreground-secondary)" />
                        <span>{INSTITUTE.address}</span>
                    </a>

                    {
                        typeof INSTITUTE.responsabile_orientamento ===
                            "string" &&
                            INSTITUTE.responsabile_orientamento.length > 0 && (
                                <div title="Responsabile orientamento">
                                    <Icon
                                        code="e7fd"
                                        color="var(--foreground-secondary)"
                                    />
                                    <span>
                                        Responsabile orientamento:{" "}
                                        {INSTITUTE.responsabile_orientamento}
                                    </span>
                                </div>
                            )
                    }
                </nav>
            </section>
        </header>
        {VIDEO && <video src={VIDEO} controls />}
        <article>
            {
                typeof INSTITUTE.edu_links !== "string" &&
                    INSTITUTE.edu_links &&
                    INSTITUTE.edu_links.length > 0 && (
                        <section>
                            <h2 class="font-regular">Indirizzi</h2>
                            <hr />

                            <ul>
                                {INSTITUTE.edu_links &&
                                    INSTITUTE.edu_links.map(
                                        (indirizzo) =>
                                            typeof indirizzo !== "string" && (
                                                <li>
                                                    <a
                                                        href={
                                                            indirizzo.link_url
                                                        }
                                                        target="_blank"
                                                    >
                                                        {indirizzo.name}
                                                    </a>
                                                </li>
                                            ),
                                    )}
                            </ul>
                        </section>
                    )
            }

            {
                INSTITUTE.main_campus
                    ? typeof INSTITUTE.branch_schools !== "string" &&
                      INSTITUTE.branch_schools &&
                      INSTITUTE.branch_schools.length > 0 && (
                          <section>
                              <h2 class="font-regular">Altre sedi</h2>
                              <hr />

                              <ul>
                                  {INSTITUTE.branch_schools.map(
                                      (sede) =>
                                          typeof sede !== "string" && (
                                              <li>
                                                  <a href={`/sede/${sede.id}`}>
                                                      {sede.name}
                                                  </a>
                                              </li>
                                          ),
                                  )}
                              </ul>
                          </section>
                      )
                    : typeof INSTITUTE.parent_school !== "string" &&
                      INSTITUTE.parent_school && (
                          <section>
                              <h2 class="font-regular">Sede principale</h2>
                              <hr />

                              <li>
                                  <a
                                      href={`/sede/${INSTITUTE.parent_school.id}`}
                                  >
                                      {INSTITUTE.parent_school.name}
                                  </a>
                              </li>
                          </section>
                      )
            }

            {
                typeof INSTITUTE.events !== "string" && INSTITUTE.events && (
                    <section>
                        <h2 class="font-regular">Open day</h2>
                        <hr />

                        <OpenDaysList institute={INSTITUTE} />
                    </section>
                )
            }
        </article>
    </main>

    <footer>
        <table>
            <th colspan="2"><div>E-Mails <hr /></div></th>
            {
                typeof INSTITUTE.school_emails !== "string" &&
                    INSTITUTE.school_emails &&
                    INSTITUTE.school_emails.map(
                        (mail) =>
                            typeof mail !== "string" && (
                                <tr>
                                    <td>{mail.label}</td>
                                    <td>
                                        <a href={`mailto:${mail.email}`}>
                                            {mail.email}
                                        </a>
                                    </td>
                                </tr>
                            ),
                    )
            }
        </table>

        <table>
            <th colspan="2"> <div>Numeri di Telefono <hr /></div></th>
            {
                typeof INSTITUTE.school_phones !== "string" &&
                    INSTITUTE.school_phones &&
                    INSTITUTE.school_phones.map(
                        (phone) =>
                            typeof phone !== "string" && (
                                <tr>
                                    <td>{phone.label}</td>
                                    <td>
                                        <a href={`tel:${phone.number}`}>
                                            {phone.number}
                                        </a>
                                    </td>
                                </tr>
                            ),
                    )
            }
        </table>
    </footer>
</Layout>

<style>
    main {
        padding: 1rem;

        display: flex;
        flex-direction: column;
        align-items: center;
        flex-wrap: nowrap;

        gap: 3rem;
    }

    /* Header */
    /* -------------------------------------------------------------------------------- */

    main > header {
        flex-basis: 100%;

        display: flex;
        justify-content: center;
        align-items: center;
        flex-wrap: wrap;
    }

    header > hr {
        width: 60%;
    }

    header > h2 {
        width: 100%;

        padding: 0.8rem 0 0 0;

        font-size: 1.8rem;
        text-align: center;
    }

    header > section {
        width: 90%;

        display: flex;
        flex-direction: row;
        justify-content: space-around;
        align-items: center;

        flex-wrap: nowrap;
    }

    section > img {
        display: none;
    }

    nav > a,
    nav > div {
        padding: 0.2rem 0;

        border: unset;
        background-color: unset;

        display: flex;
        align-items: center;
        gap: 1rem;
    }

    nav > a > span:last-child {
        text-decoration: underline;
    }

    a > span:first-child,
    div > span:first-child {
        font-size: 2.5rem;
    }

    a > span:nth-child(2),
    div > span:nth-child(2) {
        font-size: 0.9rem;
    }

    /* Video */
    /* -------------------------------------------------------------------------------- */

    main > video {
        width: 100%;
    }

    /* Sezioni */
    /* -------------------------------------------------------------------------------- */

    main > article {
        padding: 0 1rem;

        display: flex;
        flex-direction: column;
        gap: 3rem;
    }

    section > h2 {
        font-size: 1.4rem;
        text-transform: capitalize;
    }

    section > ul {
        display: flex;
        flex-direction: column;
        justify-content: space-evenly;
        align-items: flex-start;
        flex-wrap: nowrap;
        line-height: 1.5rem;
        gap: 0.8rem;
    }

    section > ul a {
        padding-left: 1rem;
        font-size: 1.2rem;
        text-decoration: underline;
    }

    /* Footer */
    /* -------------------------------------------------------------------------------- */

    footer {
        padding: 3rem 0 4rem 0;

        background-color: var(--background-secondary);
        color: black;

        display: flex;
        flex-wrap: nowrap;
        flex-direction: column;
        justify-content: space-evenly;
        gap: 2rem;
        overflow-x: hidden;
    }

    th {
        width: 100%;

        text-align: center;
        font-weight: 500;
    }

    th > div {
        display: flex;
        flex-direction: column;
        align-items: center;
        justify-content: center;
    }

    tr > td {
        padding: 0.4rem 0.4rem;
        text-align: left;
    }

    tr > td:first-child {
        padding-right: 0.5rem;
        text-align: right;
    }

    tr > td:last-child {
        padding-left: 0.5rem;
    }

    footer hr {
        width: 12rem;

        color: var(--background-primary);
        border: 1.5px solid var(--background-primary);
    }

    footer a {
        text-decoration: underline;
    }

    /* Queries */
    /* -------------------------------------------------------------------------------- */

    /* For tablets: */
    @media only screen and (min-width: 500px) {
        main {
            padding: 2rem;
        }

        div > h2 {
            font-size: 1.8rem;
        }

        nav > a,
        nav > div {
            padding: 0.4rem;
        }

        a > span:first-child,
        div > span:first-child {
            font-size: 2.4rem;
        }

        /*******/

        section > img {
            display: block;
            height: 12rem;

            border-radius: 0.8rem;
        }

        section > h2 {
            font-size: 1.6rem;
            text-transform: capitalize;
        }

        main > section {
            margin: 0rem 0 2rem 0;
            flex-wrap: nowrap;
            flex-direction: column;
        }

        footer {
            padding: 3rem 0 2rem 0;
            flex-direction: row;
            align-items: flex-start;
            gap: 0;
        }
    }

    /* For wide desktop: */
    @media only screen and (min-width: 1440px) {
        main > header {
            max-width: 70rem;
        }

        main > section {
            max-width: 70rem;

            flex-direction: column;
            align-items: center;
            justify-content: space-between;
        }

        main > video {
            width: 45%;
        }
    }
</style>
