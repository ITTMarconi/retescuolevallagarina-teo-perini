---
import '../styles/common.css';

import { SERVER_ADDRESS, SERVER_PORT } from '../../../Data/constants.ts';
import type { Institute } from '../../../Data/types';

import Navbar from '../components/Navbar.astro';
import Layout from '../layouts/Layout.astro';

const INSTITUTES_RAW = await fetch(`http://${SERVER_ADDRESS}:${SERVER_PORT}/istituti`);
const INSTITUTES: Institute[] = await INSTITUTES_RAW.json();
console.log(`[BUILD] (map.astro) Loaded ${INSTITUTES.length} institutes`);
---

<Layout>
    
    <!-- Leaflet map -->
    <link rel="stylesheet" href="https://unpkg.com/leaflet@1.9.4/dist/leaflet.css" integrity="sha256-p4NxAoJBhIIN+hmNHrzRCf9tD/miZyoHS5obTRR9BMY=" crossorigin=""/>
    <script is:inline src="https://unpkg.com/leaflet@1.9.4/dist/leaflet.js" integrity="sha256-20nQCchB9co0qIjJZRGuk2/Z9VM+kNiyxNV1lvTlZBo=" crossorigin=""></script>

    <Navbar current_view="map"/>

    <main>
        <div id="map"></div>
    </main>
</Layout>

<script is:inline define:vars={{ INSTITUTES }}>

    // take data from the db
    let db = { dati: [] };
    db.dati = INSTITUTES.map(institute => {
        const SEDE = institute.sedi.find(sede => sede.codice_MIUR === institute.codice_MIUR);

        return {
            latitudine: SEDE.posizione.latitudine,
            longitudine: SEDE.posizione.longitudine,
            codice_MIUR: SEDE.codice_MIUR,
        };
    });
    // console.log(db);

    // create map
    var map = L.map('map').setView([45.90022, 11.0392], 14);
    // build map
    L.tileLayer('https://tile.openstreetmap.org/{z}/{x}/{y}.png', {
    maxZoom: 17,
    minZoom: 8,
    attribution: '&copy; <a href="http://www.openstreetmap.org/copyright">OpenStreetMap</a>'
    }).addTo(map);

    // create pin with popup
    for(data of db.dati){
        //console.log(data);
        // find institute
        let istituto = INSTITUTES.find(institute => institute.codice_MIUR === data.codice_MIUR);

        // create popup html text
        let popup = '<u><a href="/sede/' + data.codice_MIUR + '" class="font-regular">' + istituto.nome + '</a></u>'

        // create marker with popup
        L.marker([data.latitudine, data.longitudine]).addTo(map)
            .bindPopup(popup)
    }
</script>

<script is:inline>
    // update map, simulating a window resize event, to avoid loading problem
    window.dispatchEvent(new Event('resize'))
</script>

<style is:inline>

    main {
        padding: 2% 1% 1% 2%;

        width: 96%;
        height: calc(90% - 2rem);
    }

    #map {
        height:100%;
    }

    main > div {
        width: 100%;
        height: 90%;

        border-radius: 1rem;
        box-shadow:
            rgba(14, 30, 37, 0.12) 0px 2px 4px 0px,
            rgba(14, 30, 37, 0.32) 0px 2px 16px 0px;
    }

    article > span {
        text-wrap: wrap;
        text-align: center;

        font-size: 1.2rem;
    }
    article > nav {
        padding: 0.5rem 1.5rem;

        display: flex;
        align-items: center;
        justify-content: center;
        flex-wrap: nowrap;
        gap: 0.2rem;
    }

    nav > button {
        padding: 0.4rem;

        border: unset;
        background-color: unset;

        display: flex;
        align-items: center;
        flex-wrap: nowrap;

        cursor: pointer;
    }

    nav > button:hover button > span {
        color: var(--tint-orange);
    }

    nav > button:active button > span {
        /* TODO: Find nicer color */
        color: var(--background-primary);
    }

    button > span {
        font-size: 3rem;
    }


    /* Icon style */
    button > span {
        color: var(--foreground-secondary);
        /* font-size: var(--icon_size); */
        transition: 200ms;
    }

    button > span:hover {
        color: var(--tint-orange);
        transition: 100ms;
    }
</style>
